Install nvm (Node version manager)

# Install node
nvm install node
# Use node
# nvm use <version>

# Create nx workspace
npx create-nx-workspace@latest

# Install nx
npm install -g nx

# Serve nx
nx server <app_name>

# Fix issue cannot use nx command in VSCode
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser (Powershell as administrator)

# To use interface for nx, install Nx Console extensions

# Generate application
## Generate host
nx g @nx/angular:host shell --remotes=shop,cart
## Generate remote
nx g @nx/angular:remote about --host=shell

Relationship among host and remote is store in module-federation.config.ts of each application

# Routing:
## Remote app about exposes its routes in module-federation.config.ts
const config: ModuleFederationConfig = {
  name: 'about',
  exposes: {
    './Routes': 'apps/about/src/app/remote-entry/entry.routes.ts',
  },
};
## the tsconfig.base.json in root directory defind the path to about/shop routes.ts
"paths": {
      "about/Routes": ["apps/about/src/app/remote-entry/entry.routes.ts"],
      "shop/Routes": ["apps/shop/src/app/remote-entry/entry.routes.ts"]
}
## The Shell app then load it in app.routes.ts
export const appRoutes: Route[] = [
  {
    path: 'about',
    loadChildren: () => import('about/Routes').then((m) => m.remoteRoutes),
  },
  {
    path: 'shop',
    loadChildren: () => import('shop/Routes').then((m) => m.remoteRoutes),
  },
  {
    path: '',
    component: NxWelcomeComponent,
  },
];




